import browser_cookie3
import logging
import os
from datetime import datetime, timedelta

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def generate_cookies_file(browser="edge", output_file="cookies.txt"):
    try:
        logger.info(f"Извлечение cookies из {browser} для youtube.com")
        if browser.lower() == "edge":
            cookies = browser_cookie3.edge(domain_name="youtube.com")
        else:
            logger.error(f"Неподдерживаемый браузер: {browser}")
            return False

        if not cookies:
            logger.warning("Cookies для youtube.com не найдены. Войдите в YouTube в Edge.")
            return False

        valid_cookies = []
        now = datetime.now()
        for cookie in cookies:
            if cookie.expires and cookie.expires > 0:
                expiry = datetime.fromtimestamp(cookie.expires)
                if expiry < now:
                    continue
            valid_cookies.append(cookie)

        if not valid_cookies:
            logger.warning("Нет действующих cookies для youtube.com.")
            return False

        with open(output_file, "w", encoding="utf-8") as f:
            f.write("# Netscape HTTP Cookie File\n")
            f.write("# Generated by cookies.py\n\n")
            for cookie in valid_cookies:
                domain = cookie.domain
                flag = "TRUE" if domain.startswith(".") else "FALSE"
                path = cookie.path
                secure = "TRUE" if cookie.secure else "FALSE"
                expiry = cookie.expires if cookie.expires and cookie.expires > 0 else 0
                name = cookie.name
                value = cookie.value
                f.write(f"{domain}\t{flag}\t{path}\t{secure}\t{expiry}\t{name}\t{value}\n")

        logger.info(f"Cookies сохранены в {output_file}")
        return True

    except Exception as e:
        logger.error(f"Ошибка извлечения cookies: {e}")
        return False

def is_cookies_file_valid(file_path="cookies.txt", max_age_days=30):
    if not os.path.exists(file_path):
        logger.warning(f"Файл {file_path} не найден.")
        return False
    file_mtime = datetime.fromtimestamp(os.path.getmtime(file_path))
    if datetime.now() - file_mtime > timedelta(days=max_age_days):
        logger.warning(f"Файл {file_path} устарел.")
        return False
    return True